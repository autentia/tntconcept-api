openapi: 3.0.1
info:
  title: tntconcept API
  version: 0.0.1
servers:
- url: http://localhost:8080/
tags:
- name: security
  description: Security related endpoints.
paths:
  /:
    get:
      operationId: home
      responses:
        "200":
          description: home 200 response
          content:
            application/json:
              schema:
                type: string
  /api/activity:
    get:
      summary: Gets activities between two dates.
      operationId: get$tntconcept_api
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: get$tntconcept_api 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityDateDTO'
    put:
      summary: Updates an existing activity.
      operationId: put$tntconcept_api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityRequestBodyDTO'
        required: true
      responses:
        "200":
          description: put$tntconcept_api 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponseDTO'
    post:
      summary: Creates a new activity.
      operationId: post$tntconcept_api
      requestBody:
        content:
          application/json:
            schema:
              required:
              - activityRequest
              type: object
              properties:
                activityRequest:
                  $ref: '#/components/schemas/ActivityRequestBodyDTO'
        required: true
      responses:
        "200":
          description: post$tntconcept_api 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponseDTO'
  /api/activity/{id}:
    get:
      summary: Gets an activity by its id.
      operationId: get$tntconcept_api_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: get$tntconcept_api 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponseDTO'
    delete:
      summary: Deletes an activity by its id.
      operationId: delete$tntconcept_api
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: delete$tntconcept_api 200 response
  /api/activity/{id}/image:
    get:
      summary: Retrieves an activity image by the activity id.
      operationId: getImage$tntconcept_api
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getImage$tntconcept_api 200 response
          content:
            application/json:
              schema:
                type: string
  /api/holidays:
    get:
      summary: Retrieves existing holidays within a period
      operationId: getHolidaysBetweenDate
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: getHolidaysBetweenDate 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolidayResponseDTO'
  /api/organizations:
    get:
      summary: Retrieves a list of all organizations
      operationId: getAllOrganizations
      responses:
        "200":
          description: getAllOrganizations 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationResponseDTO'
  /api/organizations/{id}/projects:
    get:
      summary: Retrieves a list of imputable projects from an organization ID
      operationId: getOrganizationsProjects
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getOrganizationsProjects 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponseDTO'
  /api/project-roles/recents:
    get:
      summary: Retrieves recent used roles
      operationId: getLatestRoles
      responses:
        "200":
          description: getLatestRoles 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectRoleRecentDTO'
  /api/project-roles/{id}:
    get:
      summary: Retrieves a project role by a given ID
      operationId: getProjectRoleById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getProjectRoleById 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectRoleResponseDTO'
  /api/projects/{id}:
    get:
      summary: Retrieves a projectÂ´s information from its ID
      operationId: getProjectById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getProjectById 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDTO'
  /api/projects/{id}/roles:
    get:
      summary: Retrieves a list of project roles from a project ID
      operationId: getProjectRolesByProjectId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: getProjectRolesByProjectId 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectRoleResponseDTO'
  /api/search:
    get:
      operationId: searchBy
      parameters:
      - name: roleIds
        in: query
        required: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        "200":
          description: searchBy 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponseDTO'
  /api/user:
    get:
      summary: Retrieves a logged user
      operationId: getLoggedUser$tntconcept_api
      responses:
        "200":
          description: getLoggedUser$tntconcept_api 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/user/secured:
    get:
      summary: Retrieves secured data only for administrator roles
      operationId: getSecuredData$tntconcept_api
      responses:
        "200":
          description: getSecuredData$tntconcept_api 200 response
          content:
            application/json:
              schema:
                type: string
  /api/vacations:
    get:
      summary: Retrieves holidays within a given charge year.
      operationId: getPrivateHolidaysByChargeYear$tntconcept_api
      parameters:
      - name: chargeYear
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: getPrivateHolidaysByChargeYear$tntconcept_api 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolidayResponseDTO'
    put:
      summary: Updates a holiday period.
      operationId: updatePrivateHolidayPeriod$tntconcept_api
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestVacationDTO'
              - required:
                - locale
                properties:
                  locale:
                    $ref: '#/components/schemas/Locale'
        required: true
      responses:
        "200":
          description: updatePrivateHolidayPeriod$tntconcept_api 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateVacationResponseDTO'
    post:
      summary: Creates a holiday period.
      operationId: createPrivateHolidayPeriod$tntconcept_api
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RequestVacationDTO'
              - required:
                - locale
                properties:
                  locale:
                    $ref: '#/components/schemas/Locale'
        required: true
      responses:
        "200":
          description: createPrivateHolidayPeriod$tntconcept_api 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateVacationResponseDTO'
  /api/vacations/days:
    get:
      summary: Retrieves holidays within a given period.
      operationId: getPrivateHolidaysPeriodDays$tntconcept_api
      parameters:
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: getPrivateHolidaysPeriodDays$tntconcept_api 200 response
          content:
            application/json:
              schema:
                type: integer
                format: int32
  /api/vacations/details:
    get:
      summary: Retrieves details for a holiday within a given charge year.
      operationId: getPrivateHolidayDetails$tntconcept_api
      parameters:
      - name: chargeYear
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: getPrivateHolidayDetails$tntconcept_api 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacationDetailsDTO'
  /api/vacations/{id}:
    delete:
      summary: Deletes a holiday period by a given ID.
      operationId: deletePrivateHolidayPeriod$tntconcept_api
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: deletePrivateHolidayPeriod$tntconcept_api 200 response
  /api/version:
    get:
      summary: Retrieves api version
      description: 200 expected
      operationId: getVersion
      responses:
        "200":
          description: getVersion 200 response
          content:
            application/json:
              schema:
                type: string
  /api/working-time:
    get:
      summary: Retrieves working time from a given date
      operationId: getWorkingTime
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: getWorkingTime 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkingTimeDTO'
  /db/clear:
    get:
      operationId: clearDatabase
      responses:
        "200":
          description: clearDatabase 200 response
  /db/seed:
    get:
      operationId: seedDatabase
      responses:
        "200":
          description: seedDatabase 200 response
  /login:
    post:
      tags:
      - security
      operationId: login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernamePasswordCredentials'
          application/json:
            schema:
              $ref: '#/components/schemas/UsernamePasswordCredentials'
        required: true
      responses:
        "200":
          description: login 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
  /logout:
    get:
      tags:
      - security
      operationId: indexGet
      responses:
        "200":
          description: indexGet 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
    post:
      tags:
      - security
      operationId: index
      responses:
        "200":
          description: index 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
  /oauth/access_token:
    get:
      tags:
      - security
      operationId: index_1
      parameters:
      - name: JWT_REFRESH_TOKEN
        in: cookie
        schema:
          type: string
          nullable: true
      responses:
        "200":
          description: index_1 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
    post:
      tags:
      - security
      operationId: index_2
      parameters:
      - name: JWT_REFRESH_TOKEN
        in: cookie
        schema:
          type: string
          nullable: true
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        "200":
          description: index_2 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
components:
  schemas:
    ActivityDateDTO:
      required:
      - activities
      - date
      - workedMinutes
      type: object
      properties:
        date:
          type: string
          format: date
        workedMinutes:
          type: integer
          format: int32
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityResponseDTO'
    ActivityRequestBodyDTO:
      required:
      - billable
      - description
      - duration
      - hasEvidences
      - projectRoleId
      - startDate
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        startDate:
          type: string
          format: date-time
        duration:
          type: integer
          format: int32
        description:
          maxLength: 2048
          type: string
        billable:
          type: boolean
        projectRoleId:
          type: integer
          format: int64
        hasEvidences:
          type: boolean
        imageFile:
          type: string
          nullable: true
    ActivityResponseDTO:
      required:
      - billable
      - description
      - duration
      - id
      - organization
      - project
      - projectRole
      - startDate
      - userId
      type: object
      properties:
        id:
          type: integer
          format: int64
        startDate:
          type: string
          format: date-time
        duration:
          type: integer
          format: int32
        description:
          type: string
        projectRole:
          $ref: '#/components/schemas/ProjectRoleResponseDTO'
        userId:
          type: integer
          format: int64
        billable:
          type: boolean
        organization:
          $ref: '#/components/schemas/OrganizationResponseDTO'
        project:
          $ref: '#/components/schemas/ProjectResponseDTO'
        hasEvidences:
          type: boolean
          nullable: true
    AnnualBalanceDTO:
      required:
      - balance
      - notRequestedVacations
      - target
      - worked
      type: object
      properties:
        worked:
          type: number
        target:
          type: number
        notRequestedVacations:
          type: number
        balance:
          type: number
    CreateVacationResponseDTO:
      required:
      - chargeYear
      - days
      - endDate
      - startDate
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        days:
          type: integer
          format: int32
        chargeYear:
          type: integer
          format: int32
    HolidayDTO:
      required:
      - date
      - description
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        date:
          type: string
          format: date
    HolidayResponseDTO:
      required:
      - holidays
      - vacations
      type: object
      properties:
        holidays:
          type: array
          items:
            $ref: '#/components/schemas/HolidayDTO'
        vacations:
          type: array
          items:
            $ref: '#/components/schemas/VacationDTO'
    Locale:
      required:
      - country
      - language
      - variant
      type: object
      properties:
        language:
          type: string
        script:
          type: string
        country:
          type: string
        variant:
          type: string
        extensionKeys:
          type: array
          items:
            type: string
        unicodeLocaleAttributes:
          type: array
          items:
            type: string
        unicodeLocaleKeys:
          type: array
          items:
            type: string
        ISO3Language:
          type: string
        ISO3Country:
          type: string
        displayLanguage:
          type: string
        displayScript:
          type: string
        displayCountry:
          type: string
        displayVariant:
          type: string
        displayName:
          type: string
    MonthlyBalanceDTO:
      required:
      - balance
      - recommended
      - roles
      - workable
      - worked
      type: object
      properties:
        workable:
          type: number
        worked:
          type: number
        recommended:
          type: number
        balance:
          type: number
        roles:
          type: array
          items:
            $ref: '#/components/schemas/MonthlyRolesDTO'
    MonthlyRolesDTO:
      required:
      - id
      - worked
      type: object
      properties:
        id:
          type: array
          items:
            type: integer
            format: int64
        worked:
          type: array
          items:
            type: number
    Object:
      type: object
    OrganizationDescriptionDTO:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    OrganizationResponseDTO:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PreviousAnnualBalanceDTO:
      required:
      - balance
      - target
      - worked
      type: object
      properties:
        worked:
          type: number
        target:
          type: number
        balance:
          type: number
    ProjectDescriptionDTO:
      required:
      - id
      - name
      - organizationId
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        organizationId:
          type: integer
          format: int64
    ProjectResponseDTO:
      required:
      - billable
      - id
      - name
      - open
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        open:
          type: boolean
        billable:
          type: boolean
    ProjectRoleDescriptionDTO:
      required:
      - id
      - name
      - projectId
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        projectId:
          type: integer
          format: int64
    ProjectRoleRecentDTO:
      required:
      - date
      - id
      - name
      - organizationName
      - projectBillable
      - projectName
      - projectOpen
      - requireEvidence
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        projectName:
          type: string
        organizationName:
          type: string
        projectBillable:
          type: boolean
        projectOpen:
          type: boolean
        date:
          type: string
          format: date-time
        requireEvidence:
          type: boolean
    ProjectRoleResponseDTO:
      required:
      - id
      - name
      - requireEvidence
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        requireEvidence:
          type: boolean
    RequestVacationDTO:
      required:
      - endDate
      - startDate
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        description:
          maxLength: 1024
          type: string
          nullable: true
    Role:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        name:
          type: string
    SearchResponseDTO:
      required:
      - organizations
      - projectRoles
      - projects
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationDescriptionDTO'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDescriptionDTO'
        projectRoles:
          type: array
          items:
            $ref: '#/components/schemas/ProjectRoleDescriptionDTO'
    TokenRefreshRequest:
      required:
      - grant_type
      - refresh_token
      type: object
      properties:
        grant_type:
          minLength: 1
          pattern: refresh_token
          type: string
        refresh_token:
          minLength: 1
          type: string
    UserResponse:
      required:
      - agreement
      - dayDuration
      - departmentId
      - email
      - hiringDate
      - id
      - name
      - photoUrl
      - role
      - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        departmentId:
          type: integer
          format: int64
        name:
          type: string
        photoUrl:
          type: string
        dayDuration:
          type: integer
          format: int32
        agreement:
          $ref: '#/components/schemas/WorkingAgreement'
        agreementYearDuration:
          type: integer
          format: int32
          nullable: true
        hiringDate:
          type: string
          format: date
        email:
          type: string
        role:
          $ref: '#/components/schemas/Role'
    UsernamePasswordCredentials:
      required:
      - password
      - username
      type: object
      properties:
        username:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
        identity:
          type: string
        secret:
          type: string
    VacationDTO:
      required:
      - chargeYear
      - days
      - endDate
      - startDate
      - state
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        observations:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        state:
          $ref: '#/components/schemas/VacationState'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        days:
          type: array
          items:
            type: string
            format: date
        chargeYear:
          type: string
          format: date
    VacationDetailsDTO:
      required:
      - acceptedVacations
      - correspondingVacations
      - holidaysAgreement
      - remainingVacations
      type: object
      properties:
        holidaysAgreement:
          type: integer
          format: int32
        correspondingVacations:
          type: integer
          format: int32
        acceptedVacations:
          type: integer
          format: int32
        remainingVacations:
          type: integer
          format: int32
    VacationState:
      type: string
      enum:
      - PENDING
      - ACCEPT
      - REJECT
      - CANCELLED
    WorkingAgreement:
      required:
      - id
      - terms
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        terms:
          type: array
          items:
            $ref: '#/components/schemas/WorkingAgreementTerms'
    WorkingAgreementTerms:
      required:
      - annualWorkingTime
      - effectiveFrom
      - id
      - vacation
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        effectiveFrom:
          type: string
          format: date
        vacation:
          type: integer
          format: int32
        annualWorkingTime:
          type: integer
          format: int32
    WorkingTimeDTO:
      required:
      - months
      - year
      type: object
      properties:
        year:
          $ref: '#/components/schemas/YearAnnualBalanceDTO'
        months:
          type: array
          items:
            $ref: '#/components/schemas/MonthlyBalanceDTO'
    YearAnnualBalanceDTO:
      required:
      - current
      - previous
      type: object
      properties:
        previous:
          $ref: '#/components/schemas/PreviousAnnualBalanceDTO'
        current:
          $ref: '#/components/schemas/AnnualBalanceDTO'
